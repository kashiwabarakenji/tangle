graph_dict = {
    (1, 1, 1):                "1L1",
    (1, 1, 2, 1, 0, -1, -1):  "3L1",
    (1, 1, 0, 0, 0, -1, 0, 0, 1, 1, 1, 1, -1, -1): "4L1",
    (1, 1, 2, 1, 1, 0, -1, -1, -1): "5L1",
    (-1, 0, 0, -1, 1, 1, 2, 1, 1, 1, 0, 0, 0, -1, -1): "5L2",
    (1, 0, -1, 1, 1, 0, 1, 0, 0, -1, 0, 1, 0, 1, 1, -1, -1): "5L3",
    (1, 1, 0, 0, 0, -1, -1, 0, 0, 0, 1, 0, 1, 1, 2, 1, -1, 0, -1, -1): "6L1",
    (1, 1, 1, 1, 0, -1, 0, -1, 0, 0, 0, 1, 0, 1, 0, -1): "6L2",
    (1, 0, -1, 2, 0, -2, 0, -1, 0, 0, 2, 2, 0, 1, 1, -1, 0, 1, -1, -1): "6L3",
    (-1, -1, 1, 0, 0, 3, 1, 0, 2, 0, -1, -3, -1, 0, -1, 2, 2, 0, 1, 1, -1, -1): "6L4",
    (-1, 0, 2, 0, 0, 1, -1, -1, 0, 0, 1, 0, 2, 1, -1, 1, 0, -1): "6L5",
    (1, 0, 0, 2, 0, -1, 1, 0, 0, -1, 0, 0, -1, 1, 1, 0, 1, 1, -1, -1): "6L6",
    (-1, 0, 1, -1, 1, 1, 0, 0, -1, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 1): "6L7",
    (-1, 0, 2, -1, -1, 2, 0, 0, 2, 1, 1, -1, 1, 0, -2, 1, 0, -2, 0, 1): "6L8",
    (-1, -1, 2, 1, -2, 2, 2, -2, 1, 2, -1, 0, 0, 1, -2, -1, 3, -2, -1, 3, 0, -1): "6L9",
    (-1, 0, 0, 0, 1, 0, 0, -1, 0, 1, 1, 1, 1): "6L10",
    (1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1): "6L11",
    (-1, -1, 0, -1, 0, 3, 3, -6, 2, 0, 0, -2, -1, -1, -3, 1, 1): "6L12Q",
    (-1, -1, 0, -1, 0, 3, 3, 2, 2, 0, 0, -2, -1, -1, -2, 1, 1): "6L12C",

    (-1, -2, -3, -2, -1): "0K1",
    (-1, -1, -2, -2, -2, -1): "2K1",
    (1, 1, 0, 0, -1, -1, -2, -2, -2, -2, -1): "3K1",
    (-1, -1, -2, -1, -1, -1, -1, -1): "4K1",
    (1, 0, -1, 0, 0, 1, 0, 0, -1, -2, -2, -2, -2, -1): "4K2",
    (-1, -1, 0, 0, 0, 0, -1, -1, -2, -1, -1, -1): "4K3",
    (1, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, -1, -2, -2, -2, -2, -1): "5K1",
    (-1, -1, -1, -2, -2, -2, -2, -1, -1, 1, 1, 1, 1): "5K2",
    (1, 1, 0, 0, 0, -1, -1, 0, -1, 0, -1, -1, -2, -2, 0, -1, -1): "5K3",
    (-1, -2, -2, -2, -3, -2, -1, -1, 0, 1, 0, 1, 1, 2, 1, 0, 1, -1, -1): "5K4",
    (-1, -1, -1, -2, -2, -1, -2, -1, -1, 0, 1, 1, 2, 0, -1): "5K5",
    (1, 0, -2, 0, 0, -1, 0, -1, -1, -2, -1, 0, -1, 0, 1, -1, -1): "5K6",
    (-1, -1, 1, 1, 0, 2, 1, 0, 1, 0, 0, -2, -1, -1, -3, -2, -1, -2, -1): "5K7",
    (1, 0, 0, 0, -1, 0, -1, -1, -2, -2, -1, -1, -1): "5K8",
    (-1, -1, -2, -1, -1, 0, 0, -1, -1, -1): "6K1",
    (1, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0, -1, -2, -2, -2, -2, -1): "6K2",
    (1, 1, 1, -1, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1): "6K3Q",
    (-1, -1, -1, -1, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1): "6K3C",
    (-1, 0, -1, -2, 0, -1, -1, -2, -1, 0, 0, 1, 1, 0, 0, 0, -1, -1): "6K4",
    (-1, -1, -1, -2, -2, -1, -1, 0, 1, 0, 0, -2, 0, 0, 0, 1): "6K5",
    (-1, -1, -1, -2, -2, -1, -1, -1, 1, 0, 1, 0, 0, 0, -1, 1, 0, -1): "6K6",
    (-1, -2, -2, -2, -3, -2, 0, 0, 1, 2, 1, 0, 1, -1, -1, -2, 0, 1, 0, 2, 0, -1): "6K7",
    (1, 0, -1, 1, 1, -3, 0, -2, -2, 0, 2, 3, -1, -1, 0, -3, -2, 0, -1, -1): "6K8Q",
    (-1, -1, 0, -2, -3, 0, -1, -1, 1, 0, 0, -2, 0, 0, -1, 1, 1, -1, 0, 1): "6K8C",
    (-1, -1, 0, -1, -2, 0, -1, -4, 0, -2, -1, 0, 2, 3, -1, 0, 1, -2, 0, 1): "6K9Q",
    (-1, -1, 0, -1, -2, 0, -1, -2, 0, 0, -1, 0, 0, 1, -1, 0, 1, -2, 0, 1): "6K9C",
    (-1, 0, 0, -4, 0, -1, -1, 0, 1, 1, -2, -2, 0, -1, 0, 2, 0, -1): "6K10Q",
    (-1, 0, 2, 0, -1, 0, -2, -2, -1, -1, 0, -1, 1, 0, -2, 0, 0, -1): "6K10C",
    (-1, -1, 1, 0, -2, 0, -1, -3, -1, 0, -1, 0, 0, 1, -1, 0): "6K11Q",
    (1, -1, -2, 2, 0, -1, 1, 0, 0, -1, 0, -1, -3, -1, 0, -2, 0, 1, -1, -1): "6K11C",
    (1, 1, -1, 0, 0, -3, -2, -1, -3, -1, -1, 0, -1, -1, 6, 0, 0, 2, 0, -1): "6K12Q",
    (-1, 0, 2, 0, 0, 2, -1, -1, 0, -1, -1, -3, -1, -2, -3, 0, 0, -1, 1, 1): "6K12C",
    (1, 0, -2, 0, 1, -1, 1, 2, 0, 1, 0, 0, -2, -2, 0, -3, -3, 0, -1, -1): "6K13",
    (-1, -1, 1, 1, -1, 1, 1, -2, 0, 0, -2, -1, -1, 0, -2, -1, 2, -1, -1, 1, -1, -1): "6K14",
    (1, 0, -2, 1, 1, -2, 0, 0, -3, -2, -2, -1, -2, -1, 2, -1, 0, 3, 0, -1): "6K15",
    (-1, -2, -1, -2, -4, -1, -1, -3, 1, 3, 1, 2, 1, 1, -2, -2, 1, -2, 0, 3, 0, -1): "6K16",
    (-1, -1, 1, 0, -2, 1, 0, -3, 0, 0, -2, -1, -1, 0, -2, 0, 3, -1, 0, 2, -1, -1): "6K17",
    (1, 0, -1, 0, -1, -1, 0, -1, 0, -1, -1, -1, -2, 0, 0, -1): "6K18",
    (1, 0, 1, -1, 0, 2, -3, -1, -6, -2, -2, 0, 1, 0, 0, 1): "6K19Q",
    (1, 1, 0, 1, 0, -2, -3, -5, -3, -2, 0, 1, 0, 1, 1): "6K19C",
}
 

def match_diagram(input_list):
    key = tuple(input_list)
    reversed_key = tuple(reversed(input_list))
    if key in graph_dict:
        return graph_dict[key]
    elif reversed_key in graph_dict:
        return graph_dict[reversed_key]
    else:
        return "一致する既知の2-bouquetグラフはありませんでした。"
    
#print(match_diagram([-1, -2, -2, -2, -2, -1, 0, 0, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1]))
#print(match_diagram([-1, -2, -1, -2, -2, -1, -1, -1, -2, -2, -2, -3, -2, -2, -2, -1]))
while True:
    l = input("リストを入力してください: ")
    l = l.strip()  # 前後の空白削除
    if l.startswith('[') and l.endswith(']'):
        l = l[1:-1]  # 両端のかっこ削除
    if not l:
        print("入力が空です。終了します。")
        break

    try:
        input_list = list(map(int, l.split(',')))
        print(match_diagram(input_list))
    except ValueError:
        print("入力形式が正しくありません。例: -1,0,0,1")
